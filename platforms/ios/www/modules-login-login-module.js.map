{"version":3,"sources":["webpack:///./src/app/modules/login/login.module.ts","webpack:///./src/app/modules/login/pages/login/index.ts","webpack:///./src/app/modules/login/pages/login/login.page.html","webpack:///./src/app/modules/login/pages/login/login.page.scss","webpack:///./src/app/modules/login/pages/login/login.page.ts","webpack:///./src/app/shared/dtos/login-user.dto.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEH;AAE1C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;AC1B5B;AAAA;AAAA;AAAA;AAA6B;;;;;;;;;;;;ACA7B,6vB;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;ACAS;AACmB;AACF;AACvC;AAC+B;AAOjF;IACE,mBAAmB,oBAA0C,EAC1C,qBAA4C,EAC3C,EAAe;QAFhB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,0BAAqB,GAArB,qBAAqB,CAAuB;QAC3C,OAAE,GAAF,EAAE,CAAa;IAAI,CAAC;IAIxC,4BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,yBAAK,GAAL;QACE,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAM,QAAQ,GAAG,IAAI,wEAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACzC,SAAS,EAAE,CAAC;SACd;IACH,CAAC;IApBU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6GAAgC;;SAEjC,CAAC;+EAEyC,yFAAoB;YACnB,2FAAqB;YACvC,0DAAW;OAHxB,SAAS,CAsBrB;IAAD,gBAAC;CAAA;AAtBqB;;;;;;;;;;;;;ACXtB;AAAA;AAAA;IAII,sBAAmB,IAAkB;QACjC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IACH,mBAAC;AAAD,CAAC","file":"modules-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './pages/login';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export * from './login.page';","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"loginForm\\\">\\n      <ion-list>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"> Email</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n    \\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password </ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n          </ion-item>\\n      </ion-list>\\n  </form>\\n\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\">  Login</ion-button>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbG9naW4vcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\"","import { LoginUserDto } from './../../../../shared/dtos/login-user.dto';\nimport { AuthenticationService } from './../../../../core/services/authentication.service';\nimport { ConfigurationService } from './../../../../core/services/configuration.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(public configurationService: ConfigurationService, \n              public authenticationService: AuthenticationService,\n              private fb: FormBuilder) { }\n\n  public loginForm: FormGroup;\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      const loginDto = new LoginUserDto(this.loginForm.value);\n      this.authenticationService.login(loginDto)\n      .subscribe();\n    }\n  }\n\n}\n","export class LoginUserDto {\n    public email: string;\n    public password: string;\n\n    public constructor(init: LoginUserDto) {\n        Object.assign(this, init);\n    }\n  }"],"sourceRoot":""}